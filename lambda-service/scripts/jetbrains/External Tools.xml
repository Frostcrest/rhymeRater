<toolSet name="External Tools">
  <tool name="WSDL | Generate Go Client" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="gowsdl" />
      <option name="PARAMETERS" value="-p $FileNameWithoutAllExtensions$ -o $FileNameWithoutAllExtensions$.go $FileName$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Swagger | Validate Specs" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="swagger" />
      <option name="PARAMETERS" value="validate ./$FileName$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Swagger | Serve Specs" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="swagger" />
      <option name="PARAMETERS" value="serve ./$FileName$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Swagger | Generate Server" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="swagger" />
      <option name="PARAMETERS" value="generate server -f ./$FileName$ -A $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Swagger | Generate Client" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="swagger" />
      <option name="PARAMETERS" value="generate client -f ./$FileName$ -A $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="OpenApi2proto | Convert to Proto" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="openapi2proto" />
      <option name="PARAMETERS" value="-spec $FileName$ -annotate -out $FileNameWithoutAllExtensions$.proto" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Protoc | Generate Stub" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="protoc" />
      <option name="PARAMETERS" value="-I$FileDir$ -I$GOPATH$/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --go_out=plugins=grpc:. $FileName$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Protoc | Inject Custom Tags (bson)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="protoc-go-inject-tag " />
      <option name="PARAMETERS" value="-input=./$FileName$ -XXX_skip=bson" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Protoc | Generate Gateway Stub (Proxy for gRPC/REST)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="protoc" />
      <option name="PARAMETERS" value="-I. -I$GOPATH$/src -I$GOPATH$/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --grpc-gateway_out=logtostderr=true:. $FileName$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="specs2proto" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/specs2proto.sh" />
      <option name="PARAMETERS" value="-f $FileDir$/$FileNameWithoutExtension$" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="Docker | Build" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="docker" />
      <option name="PARAMETERS" value="build -t coretech/rbeast ." />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="CircileCi | Validate" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="circleci " />
      <option name="PARAMETERS" value="config validate" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="CircleCi | Build" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="circleci " />
      <option name="PARAMETERS" value="build" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="Terraform | Plan" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="terraform" />
      <option name="PARAMETERS" value="plan" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$/terraform" />
    </exec>
  </tool>
  <tool name="Terraform | Apply" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="true" showConsoleOnStdErr="true" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="terraform" />
      <option name="PARAMETERS" value="apply -auto-approve " />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$/terraform" />
    </exec>
  </tool>
  <tool name="Terraform | Destroy" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="terraform" />
      <option name="PARAMETERS" value="destroy -auto-approve " />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$/terraform" />
    </exec>
  </tool>
  <tool name="Terraform | Init" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="terraform" />
      <option name="PARAMETERS" value="init" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$/terraform" />
    </exec>
  </tool>
  <tool name="Docker | Build Rbeast Image" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="docker" />
      <option name="PARAMETERS" value="build -t coretech/rbeast ." />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="Docker | Build Generic Image " showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="docker" />
      <option name="PARAMETERS" value="build -t $ProjectName$$Prompt$ ." />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="sls | invoke" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls" />
      <option name="PARAMETERS" value="invoke -f $Prompt$ -l" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="sls | plugin list" description="sls create a new function" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls" />
      <option name="PARAMETERS" value="plugin list" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="sls | deployment list" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls" />
      <option name="PARAMETERS" value="deploy list" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="sls | plugin search" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls " />
      <option name="PARAMETERS" value="plugin search --query $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="sls | serve locally" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="_LAMBDA_SERVER_PORT=6666 go" />
      <option name="PARAMETERS" value="run $FileName$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="sls | remove" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/slsremove.sh" />
      <option name="PARAMETERS" value="$FileDir$ $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="sls | create service" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls" />
      <option name="PARAMETERS" value="create --template aws-go-mod --path $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="sls | package " showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls" />
      <option name="PARAMETERS" value="package" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="make" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="make" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="npm | init" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="npm " />
      <option name="PARAMETERS" value="init --yes" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="npm | install (dev)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="npm " />
      <option name="PARAMETERS" value="install --save-dev $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="npm | install (save)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="npm" />
      <option name="PARAMETERS" value="install $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Plugin Install " showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/pluginstall.sh" />
      <option name="PARAMETERS" value="$FileDir$ $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Plugin Install (serverless2sam)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/pluginstall.sh" />
      <option name="PARAMETERS" value="$FileDir$ serverless-sam" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Plugin Install (canary-deployment)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/pluginstall.sh" />
      <option name="PARAMETERS" value="$FileDir$ serverless-plugin-canary-deployments" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Plugin Install (domain-mgmt)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/pluginstall.sh" />
      <option name="PARAMETERS" value="$FileDir$ serverless-domain-manager" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Plugin Install (dynamodb-autscale)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/pluginstall.sh" />
      <option name="PARAMETERS" value="$FileDir$ @endemolshinegroup/serverless-dynamodb-autoscaler" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="sls | export to sam " showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls " />
      <option name="PARAMETERS" value="sam export --output template.yml" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="SAM | Add Debug for visual studio" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/vsdebug.sh" />
      <option name="PARAMETERS" value="$ProjectFileDir$" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="Sam Local | Debug function" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sam" />
      <option name="PARAMETERS" value="local invoke $Prompt$ -d 8997 -e event.json --debugger-path $GOPATH$/linux/" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="sls | deploy all with profile" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls" />
      <option name="PARAMETERS" value="deploy -v --aws-profile $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="sls | deploy function (profile)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/slsdeploy.sh" />
      <option name="PARAMETERS" value="$FileDir$ $FileName$ $Prompt$ " />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="SLS - SAM | SET AWS Profile" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/awsprofile.sh" />
      <option name="PARAMETERS" value="$Prompt$" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Create domain " showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls" />
      <option name="PARAMETERS" value="create_domain --aws-profile sandbox --stage $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Plugin Install (api-cloudfront-domain)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/pluginstall.sh" />
      <option name="PARAMETERS" value="$FileDir$ serverless-api-cloudfront" />
      <option name="WORKING_DIRECTORY" value="$ProjectFileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Create Plugin  " showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="sls" />
      <option name="PARAMETERS" value="create --template plugin" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Sam Local | Invoke function(2)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/samlocal.sh" />
      <option name="PARAMETERS" value="$FileDir$ $FileName$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="Sam Local | Debug function(2)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/samlocal.sh" />
      <option name="PARAMETERS" value="$FileDir$ $FileName$ debug" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="SLS | Function Logs (Profile optional)" showInMainMenu="true" showInEditor="true" showInProject="true" showInSearchPopup="true" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="$ProjectFileDir$/scripts/slslogs.sh" />
      <option name="PARAMETERS" value="$FileDir$ $FileName$ $Prompt$" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
  <tool name="swagger-to-graphql" description="swagger to graphql " showInMainMenu="false" showInEditor="false" showInProject="false" showInSearchPopup="false" disabled="false" useConsole="true" showConsoleOnStdOut="false" showConsoleOnStdErr="false" synchronizeAfterRun="true">
    <exec>
      <option name="COMMAND" value="swagger-to-graphql " />
      <option name="PARAMETERS" value="--swagger=$FileName$ &gt; $FileNameWithoutExtension$.graphql" />
      <option name="WORKING_DIRECTORY" value="$FileDir$" />
    </exec>
  </tool>
</toolSet>